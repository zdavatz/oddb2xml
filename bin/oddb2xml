#!/usr/bin/env ruby

require 'pathname'

root = Pathname.new(__FILE__).realpath.parent.parent
$:.unshift root.join('lib') if $0 == __FILE__

require 'optparse'
require 'oddb2xml'

def help
  <<EOS
#$0 ver.#{Oddb2xml::VERSION}
Usage:
  oddb2xml [option]
    produced files are found under data
    -a T, --append=T     Additional target. T, only 'nonpharma' is available.
    -c F, --compress=F   Compress format F. {tar.gz|zip}
    -e    --extended     pharma, non-pharma plus prices and non-pharma from zurrose. Products without EAN-Code will also be listed.
    -f F, --format=F     File format F, default is xml. {xml|dat}
                         If F is given, -o option is ignored.
    -i I, --include=I    Include target option for 'dat' format. only 'ean14' is available.
                         'xml' format includes always ean14 records.
    -o O, --option=O     Optional output. O, only 'fi' is available.
    -p P, --price=P      Price source (transfer.dat). P, only 'zurrose' is available.
    -t S, --tag-suffix=S XML tag suffix S. Default is none. [A-z0-9]
                         If S is given, it is also used as prefix of filename.
    -x N, --context=N    context N {product|address}. product is default.
                         
                         For debugging purposes
    --skip-download      skips downloading files it the file is already under data/download.
                         Downloaded files are saved under data/download
    --log                log important actions
    -h,   --help         Show this help message.
EOS
end

parser = OptionParser.new
opts = {
  :fi           => false,
  :adr          => false,
  :nonpharma    => false,
  :extended      => false,
  :compress_ext => nil,
  :format       => :xml,
  :tag_suffix   => nil,
  :debug        => false,
  :ean14        => false,
  :skip_download=> false,
  :log          => false,
  }

parser.on('-a v', '--append v',     /^nonpharma$/)  {|v| opts[:nonpharma] = true }
parser.on('-c v', '--compress v',   /^tar\.gz|zip$/){|v| opts[:compress_ext] = v }
parser.on('-e',   '--extended')                     {|v| opts[:extended] = true
                                                     opts[:nonpharma] = :true
                                                    opts[:price] = :zurrose
                                                    }
parser.on('-f v', '--format v',     /^xml|dat$/)    {|v| opts[:format] = v.intern }
parser.on('-o v', '--option v',     /^fi$/)         {|v| opts[:fi] = true }
parser.on('-i v', '--include v',    /^ean14$/)      {|v| opts[:ean14] = true }
parser.on('-t v', '--tag-suffix v', /^[A-z0-9]*$/i) {|v| opts[:tag_suffix] = v.upcase }
parser.on('-x v', '--context v',    /^addr(ess)*$/i){|v| opts[:address] = true }
parser.on('-p v', '--price v',      /^zurrose$/)    {|v| opts[:price] = v.intern }
parser.on('--skip-download')                        {|v| opts[:skip_download] = true }
parser.on('--log')                                  {|v| opts[:log] = :true }
parser.on_tail('-h', '--help') { puts help; exit }

args = ARGV.dup
begin
  parser.parse!(args)
rescue OptionParser::MissingArgument,
       OptionParser::InvalidArgument,
       OptionParser::InvalidOption
  puts help
  exit
end

# TEMP
if path = args.first
  opts[:transfer_dat] = path
end

startTime = Time.now
ui = Oddb2xml::Cli.new(opts)
begin
  if opts[:format] == :xml
    opts[:ean14] = true # force
  end
  #puts opts if opts[:debug]
  if RUBY_VERSION.to_f < 1.9
    message = <<-MES
Once you find some time, please upgrade your Ruby to 1.9.3 ;)
then you will not see anymore warnings
    MES
    warn message
  end
  ui.run
rescue Interrupt
  exit
end
diff = (Time.now-startTime).to_i
puts "#{Time.now}: #{__LINE__} done. Took #{diff} seconds"; $stdout.sync
